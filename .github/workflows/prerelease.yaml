name: Prerelease

on:
  workflow_dispatch:
  push:
    branches:
      ## TODO: return back when become public
      # - main
      # - dev
      - "ci/**"
    tags:
      - "[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

env:
  release: ${{ startsWith(github.ref, 'refs/tags/') && startsWith(github.repository, 'gosh-sh/') }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        bin:
          - gosh_proposer
        result:
          - gosh_proposer-darwin-arm64
          - gosh_proposer-darwin-amd64
          - gosh_proposer-linux-arm64
          - gosh_proposer-linux-amd64

        include:
          - result: gosh_proposer-darwin-arm64
            target: aarch64-apple-darwin
            os: macos-12

          - result: gosh_proposer-darwin-amd64
            target: x86_64-apple-darwin
            os: macos-12

          - result: gosh_proposer-linux-arm64
            target: aarch64-unknown-linux-musl
            os: ubuntu-22.04

          - result: gosh_proposer-linux-amd64
            target: x86_64-unknown-linux-musl
            os: ubuntu-22.04

    name: B ${{ matrix.target }}

    env:
      SCCACHE_GHA_VERSION: ${{ vars.SCCACHE_GHA_VERSION || 1 }} # Setting this env var enables the caching
      CARGO_TERM_COLOR: always
      RUSTC_WRAPPER: sccache
      CMAKE_C_COMPILER_LAUNCHER: sccache
      CMAKE_CXX_COMPILER_LAUNCHER: sccache

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure sccache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Setup cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: builder-${{ runner.os }}-cargo

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Linux tools
        if: startsWith(matrix.os, 'ubuntu-')
        env:
          packages: >-
            build-essential
            cmake
            curl
            clang
            protobuf-compiler
            python3-pip
        run: |
          sudo apt update -yq
          sudo apt install -yq $packages
          pip3 install ziglang

      - name: Install MacOS tools
        if: startsWith(matrix.os, 'macos-')
        run: |
          brew install protobuf zig

      - name: Install common tools
        run: |
          [[ -f ~/.cargo/bin/cargo-zigbuild ]] || cargo install cargo-zigbuild

      - name: Build Binary
        env:
          CARGO_INCREMENTAL: 0 # important for cache size too
          CARGO_NET_RETRY: 10
          RUST_BACKTRACE: full
          RUSTUP_MAX_RETRIES: 10
        run: |
          cargo update
          cargo zigbuild -r --target ${{ matrix.target }}

          ls -lA target/${{ matrix.target }}/release

      - name: Artifact ${{ matrix.result }}
        uses: actions/upload-artifact@v3
        with:
          path: target/${{ matrix.target }}/release/${{ matrix.bin }}
          name: ${{ matrix.result }}--${{ matrix.bin }}
          if-no-files-found: error
          retention-days: 3

  release:
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        result:
          - gosh_proposer-darwin-arm64
          - gosh_proposer-darwin-amd64
          - gosh_proposer-linux-arm64
          - gosh_proposer-linux-amd64

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: ls -R

      ## IMPORTANT! only works with non-windows binaries
      - name: Gather all binaries "${{ matrix.result }}"
        run: |
          mkdir -p ${{ matrix.result }}
          cp ${{ matrix.result }}--*/* ${{ matrix.result }}
          ls -lA ${{ matrix.result }}

      - name: Make archive
        run: |
          chmod +x ${{ matrix.result }}/*
          cd ${{ matrix.result }}
          tar -czvf ../${{ matrix.result }}.tar.gz .

      - name: Upload Draft
        uses: softprops/action-gh-release@v1
        if: env.release != 'true'
        with:
          draft: true
          tag_name: ${{ github.ref_name  }}-${{ github.run_number }}
          files: |
            ${{ matrix.result }}.tar.gz
          body: ""

      - name: Upload Prerelease
        uses: softprops/action-gh-release@v1
        if: env.release == 'true'
        with:
          prerelease: true
          tag_name: ${{ github.ref_name }}
          files: |
            ${{ matrix.result }}.tar.gz
          name: "Version: ${{ github.ref_name }}"
          body: ""
